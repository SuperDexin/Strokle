let strokes = ["„áê", "„áë", "„áì", "„áî", "„áï", "„áÖ", "„áá", "„áó", "„áû", "„áõ", "„áÇ", "„áé"];

let characters = [
	"Áéâ", "Âàä", "Êú™", "Êú´", "Á§∫", "Âáª", "ÈÇó", "Êàã", "Êâì", "Â∑ß", "Ê≠£", "Êâë", "Âçâ", "Êâí", "ÈÇõ", 
	"Âäü", "Êâî", "Âéª", "Áîò", "‰∏ñ", "Ëâæ", "ËâΩ", "Âè§", "ËäÇ", "Ëâø", "Êú¨", "ÊúØ", "Êú≠", "ÂèØ", "Âèµ", 
	"Âåù", "‰∏ô", "Â∑¶", "Âéâ", "‰∏ï", "Áü≥", "Âè≥", "Â∏É", "Â§Ø", "Êàä", "Èæô", "Âπ≥", "ÁÅ≠", "ËΩß", "‰∏ú", 
	"Âä¢", "Âç°", "Âåó", "Âç†", "Âá∏", "Âç¢", "‰∏ö", "Êóß", "Â∏Ö", "ÂΩí", "Êó¶", "ÁõÆ", "‰∏î", "Âè∂", "Áî≤", 
	"Áî≥", "ÂèÆ", "Áîµ", "Âè∑", "Áî∞", "Áî±", "Âçü", "Âè™", "Âè≠", "Âè≤", "Â§Æ", "Âè±", "ÂÖÑ", "ÂèΩ", "Âèº", 
	"Âè´", "Âè©", "Âè®", "Âèª", "Âè¶", "Âèπ", "ÂÜâ", "Áöø", "Âáπ", "Âõö", "Âõõ", "Áîü", "Áü¢", "Â§±", "Ê∞ï", 
	"‰πç", "Á¶æ", "‰ª®", "‰∏ò", "‰ªï", "‰ªò", "‰ªó", "‰ª£", "‰ªô", "‰ªü", "‰ª°", "‰ª´", "‰ª¨", "‰ª™", "ÁôΩ", 
	"‰ªî", "‰ªñ", "‰ªû", "Êñ•", "ÂçÆ", "Áìú", "‰ªù", "‰πé", "‰∏õ", "‰ª§", "Áî®", "Áî©", "Âç∞", "Ê∞ê", "Â∞î", 
	"‰πê", "Âè•", "ÂåÜ", "Áä∞", "ÂÜå", "ÂçØ", "ÁäØ", "Â§ñ", "Â§Ñ", "ÂÜ¨", "È∏ü", "Âä°", "Âàç", "ÂåÖ", "È••", 
	"‰∏ª", "Â∏Ç", "ÈÇù", "Á´ã", "ÂÜØ", "ÈÇô", "ÁéÑ", "Èó™", "ÂÖ∞", "Âçä", "Ê±Å", "Ê±Ä", "Ê±á", "Â§¥", "Ê±â", 
	"Âøâ", "ÂÆÅ", "Á©¥", "ÂÆÉ", "ÂÆÑ", "ËÆ¶", "ËÆß", "ËÆ®", "ÂÜô", "ËÆ©", "Á§º", "ËÆ™", "ËÆ´", "ËÆ≠", "ËÆÆ", 
	"ÂøÖ", "ËÆØ", "ËÆ∞", "Ê∞∏", "Âè∏", "Â∞º", "Â∞ª", "Ê∞ë", "Âºó", "Âºò", "Âá∫", "Èò°", "ËæΩ", "Â•∂", "Â•¥", 
	"Â∞ï", "Âè¨", "Âä†", "ÁöÆ", "Ëæπ", "Â≠ï", "Âèë", "Âú£", "ÂØπ", "ÂºÅ", "Âè∞", "Áüõ", "Á∫†", "È©≠", "ÊØç", "Âπº", "‰∏ù" ]; 

let orders = [
	["1", "1", "2", "1", "4"], ["1", "1", "2", "2", "2"], ["1", "1", "2", "3", "4"], ["1", "1", "2", "3", "4"], ["1", "1", "2", "3", "4"], 
	["1", "1", "2", "8", "2"], ["1", "1", "2", "c", "2"], ["1", "1", "b", "3", "4"], ["1", "2", "1", "1", "2"], ["1", "2", "1", "1", "9"], 
	["1", "2", "1", "2", "1"], ["1", "2", "1", "2", "4"], ["1", "2", "1", "3", "2"], ["1", "2", "1", "3", "4"], ["1", "2", "1", "c", "2"], 
	["1", "2", "1", "5", "3"], ["1", "2", "1", "c", "3"], ["1", "2", "1", "8", "4"], ["1", "2", "2", "1", "1"], ["1", "2", "2", "1", "8"], 
	["1", "2", "2", "3", "4"], ["1", "2", "2", "3", "6"], ["1", "2", "2", "5", "1"], ["1", "2", "2", "5", "2"], ["1", "2", "2", "c", "3"], 
	["1", "2", "3", "4", "1"], ["1", "2", "3", "4", "4"], ["1", "2", "3", "4", "8"], ["1", "2", "5", "1", "2"], ["1", "2", "5", "1", "8"], 
	["1", "2", "5", "2", "8"], ["1", "2", "5", "3", "4"], ["1", "3", "1", "2", "1"], ["1", "3", "1", "5", "3"], ["1", "3", "2", "4", "1"], 
	["1", "3", "2", "5", "1"], ["1", "3", "2", "5", "1"], ["1", "3", "2", "5", "2"], ["1", "3", "4", "5", "3"], ["1", "3", "b", "3", "4"], 
	["1", "3", "8", "3", "4"], ["1", "4", "3", "1", "2"], ["1", "4", "3", "3", "4"], ["1", "8", "2", "1", "8"], ["1", "8", "2", "3", "4"], 
	["1", "5", "3", "5", "3"], ["2", "1", "1", "2", "4"], ["2", "1", "1", "3", "8"], ["2", "1", "2", "5", "1"], ["2", "1", "2", "c", "1"], 
	["2", "1", "5", "1", "3"], ["2", "2", "4", "3", "1"], ["2", "2", "5", "1", "1"], ["2", "3", "2", "5", "2"], ["2", "3", "5", "1", "1"], 
	["2", "5", "1", "1", "1"], ["2", "5", "1", "1", "1"], ["2", "5", "1", "1", "1"], ["2", "5", "1", "1", "2"], ["2", "5", "1", "1", "2"], 
	["2", "5", "1", "1", "2"], ["2", "5", "1", "1", "2"], ["2", "5", "1", "1", "8"], ["2", "5", "1", "1", "9"], ["2", "5", "1", "2", "1"], 
	["2", "5", "1", "2", "1"], ["2", "5", "1", "2", "4"], ["2", "5", "1", "3", "4"], ["2", "5", "1", "3", "4"], ["2", "5", "1", "3", "4"], 
	["2", "5", "1", "3", "4"], ["2", "5", "1", "3", "8"], ["2", "5", "1", "3", "8"], ["2", "5", "1", "3", "6"], ["2", "5", "1", "5", "1"], 
	["2", "5", "1", "8", "2"], ["2", "5", "1", "5", "2"], ["2", "5", "1", "5", "3"], ["2", "5", "1", "5", "3"], ["2", "5", "1", "5", "3"], 
	["2", "5", "1", "7", "4"], ["2", "5", "2", "1", "1"], ["2", "5", "2", "2", "1"], ["2", "6", "2", "5", "1"], ["2", "5", "3", "4", "1"], 
	["2", "5", "3", "8", "1"], ["3", "1", "1", "2", "1"], ["3", "1", "1", "3", "4"], ["3", "1", "1", "3", "4"], ["3", "1", "1", "6", "3"], 
	["3", "1", "2", "1", "1"], ["3", "1", "2", "3", "4"], ["3", "2", "1", "1", "1"], ["3", "2", "1", "2", "1"], ["3", "2", "1", "2", "1"], 
	["3", "2", "1", "2", "4"], ["3", "2", "1", "3", "4"], ["3", "2", "1", "b", "4"], ["3", "2", "2", "8", "2"], ["3", "2", "3", "1", "2"], 
	["3", "2", "3", "1", "6"], ["3", "2", "3", "8", "4"], ["3", "2", "4", "2", "5"], ["3", "2", "4", "3", "4"], ["3", "2", "5", "1", "1"], 
	["3", "2", "7", "2", "1"], ["3", "2", "5", "2", "8"], ["3", "2", "5", "3", "4"], ["3", "3", "1", "2", "4"], ["3", "3", "1", "5", "8"], 
	["3", "3", "8", "4", "4"], ["3", "4", "1", "2", "1"], ["3", "4", "3", "1", "2"], ["3", "4", "3", "4", "1"], ["3", "4", "4", "7", "4"], 
	["3", "5", "1", "1", "2"], ["3", "5", "1", "1", "8"], ["3", "8", "1", "5", "2"], ["3", "8", "1", "b", "4"], ["3", "7", "2", "3", "4"], 
	["3", "8", "2", "3", "4"], ["3", "5", "2", "5", "1"], ["3", "5", "3", "3", "4"], ["3", "2", "3", "3", "6"], ["3", "5", "3", "5", "1"], 
	["3", "8", "3", "5", "2"], ["3", "2", "3", "5", "8"], ["3", "7", "4", "2", "4"], ["3", "7", "4", "2", "4"], ["3", "7", "4", "4", "4"], 
	["3", "5", "4", "9", "1"], ["3", "7", "4", "5", "3"], ["3", "7", "5", "1", "1"], ["3", "5", "5", "1", "8"], ["3", "7", "8", "3", "6"], 
	["4", "1", "1", "2", "1"], ["4", "1", "2", "5", "2"], ["4", "1", "3", "c", "2"], ["4", "1", "4", "3", "1"], ["4", "1", "5", "9", "1"], 
	["4", "1", "8", "c", "2"], ["4", "1", "8", "8", "4"], ["4", "2", "5", "3", "4"], ["4", "3", "1", "1", "1"], ["4", "3", "1", "1", "2"], 
	["4", "4", "1", "1", "2"], ["4", "4", "1", "1", "2"], ["4", "4", "1", "1", "8"], ["4", "4", "1", "3", "4"], ["4", "4", "1", "7", "4"], 
	["4", "4", "2", "5", "3"], ["4", "4", "7", "1", "2"], ["4", "4", "7", "3", "4"], ["4", "4", "7", "3", "8"], ["4", "4", "7", "3", "6"], 
	["4", "6", "1", "1", "2"], ["4", "6", "1", "2", "1"], ["4", "6", "1", "2", "4"], ["4", "7", "1", "9", "1"], ["4", "6", "2", "1", "1"], 
	["4", "7", "2", "4", "8"], ["4", "6", "2", "8", "2"], ["4", "6", "3", "1", "6"], ["4", "6", "3", "2", "2"], ["4", "6", "4", "3", "4"], 
	["4", "b", "4", "3", "4"], ["4", "6", "6", "1", "2"], ["4", "6", "5", "1", "8"], ["4", "5", "7", "3", "4"], ["5", "1", "2", "5", "1"], 
	["5", "1", "3", "3", "8"], ["5", "1", "3", "3", "6"], ["5", "1", "8", "1", "b"], ["5", "1", "9", "3", "2"], ["5", "1", "9", "8", "4"], 
	["8", "2", "2", "8", "2"], ["c", "2", "3", "1", "2"], ["7", "2", "4", "c", "4"], ["a", "3", "1", "c", "3"], ["a", "3", "1", "7", "4"], 
	["c", "3", "2", "3", "4"], ["5", "3", "2", "5", "1"], ["5", "3", "2", "5", "1"], ["7", "3", "2", "7", "4"], ["5", "3", "4", "c", "4"], 
	["c", "3", "7", "2", "1"], ["8", "3", "7", "4", "4"], ["7", "4", "1", "2", "1"], ["7", "4", "1", "2", "4"], ["8", "4", "1", "3", "2"], 
	["8", "4", "2", "5", "1"], ["7", "4", "7", "2", "3"], ["8", "8", "1", "8", "2"], ["5", "9", "1", "7", "4"], ["8", "5", "4", "1", "4"], 
	["8", "8", "4", "5", "3"], ["8", "8", "8", "8", "1"]];


const total_char = 197;
let stroke_num = 5;
let max_round_num = 6;

let now_num = 0;
let round = 0;
let answer_hidden = true;

let answers = new Array(stroke_num);
let question = new Array(stroke_num);
let question_char = "";
let all_result = [];

let result_icon = ["‚¨ú", "üü©", "üü®"];

let is_end = false;

function choose(ID) {
	if (now_num < stroke_num && !is_end) {
		answers[now_num] = ID;
		now_num += 1;
		let spot_id = "line" + (round + 1) + "spot" + now_num;
		document.getElementById(spot_id).innerHTML = strokes[parseInt(ID, 16) - 1];
	}
}

function del() {
	if (now_num > 0 && !is_end) {
		let spot_id = "line" + (round + 1) + "spot" + now_num;
		document.getElementById(spot_id).innerHTML = "";
		now_num -= 1;
		document.getElementById("ans" + (round + 1)).innerHTML = "";	
	}
}

function submit() {
	if (now_num === stroke_num) {
		if(check_char_legal()){
			if(stroke_num == show()){
				success();
			}else if(round == max_round_num){
				fail();
			}
		}
		else{
			document.getElementById("ans" + (round + 1)).innerHTML = "Êü•Êó†Ê≠§Â≠ó";
		}
	}
}

function check_char_legal(){
	let content = "";
	let is_legal = false;

	for(let i = 0; i < total_char; i++){
		for(let j = 0; j < stroke_num; j++){
			if(answers[j] != orders[i][j]){
				break;
			}
			else if(j == stroke_num-1){
				content += characters[i];
				content += " ";
				is_legal = true;
			}
		}
	}
	document.getElementById("ans" + (round + 1)).innerHTML = content;
	return is_legal;
}

function show(){
	round++;
	let match_result = match();
	let temp = 0;
	for(let i = 0; i < stroke_num; i++){
		if(match_result[i] == 0){
			document.getElementById("line"+round+"spot"+(i+1)).style.background = 'lightgray';
		}
		else if(match_result[i] == 1){
			document.getElementById("line"+round+"spot"+(i+1)).style.background = 'lightgreen';
			temp++;
		}
		else if(match_result[i] == 2){
			document.getElementById("line"+round+"spot"+(i+1)).style.background = 'lightyellow';
		}
		all_result.push(match_result[i]);
	}
	now_num = 0;
	return temp;
}

function match(){
	let match_result = [0,0,0,0,0];
	let temp_array = [0,0,0,0,0];
	for(let i = 0; i < stroke_num; i++){
		if(answers[i] == question[i]){
			match_result[i] = 1;
		}
		else{
			temp_array[i] = question[i];
		}
	}
	for(let i = 0; i < stroke_num; i++){
		if(match_result[i] != 1){
			for(let j = 0; j < stroke_num; j++){
				if(answers[i] == temp_array[j]){
					match_result[i] = 2;
					temp_array[j] = 0;
					break;
				}
			}
		}
	}
	return match_result;
}

function success(){
	let content = `ÊÅ≠ÂñúÊàêÂäüÔºÅ\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\nÊ≠£Á°ÆÁ≠îÊ°àÔºö„Äå${question_char}„Äç\n`;
	let temp = 0;
	for(let i = 0; i < round; i++){
		for(let j = 0; j < stroke_num; j++){
			content += result_icon[all_result[temp]];
			temp++;
		}
		content += "\n";	
	}
	round = 0;
	is_end = true;
	alert(content);
}

function fail(){
	let content = `Êä±Ê≠â‰Ω†Âπ∂Êú™ÂÆåÊàê\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\nÊ≠£Á°ÆÁ≠îÊ°àÔºö„Äå${question_char}„Äç\n`;
	let temp = 0;
	for(let i = 0; i < round; i++){
		for(let j = 0; j < stroke_num; j++){
			content += result_icon[all_result[temp]];
			temp++;
		}
		content += "\n";	
	}
	round = 0;
	is_end = true;
	alert(content);
}

function refresh(){
	let temp = Math.floor((Math.random() * total_char));

	for(let i=0; i<stroke_num; i++){
		question[i] = orders[temp][i];
	}
	question_char = characters[temp];

	round = 0;
	now_num = 0;
	is_end = false;
	all_result = [];
	document.getElementById("head").innerHTML = "STROKLE";
	document.getElementById("check_answer").innerHTML = "Êü•ÁúãÁ≠îÊ°à";
	clear();
}

function show_answer() {
	let content = "";
	let button_content;
	if (!answer_hidden) {
		content = "STROKLE";
		button_content = "Êü•ÁúãÁ≠îÊ°à";
	}
	if (answer_hidden) {
		content = question_char;
		button_content = "ÈöêËóèÁ≠îÊ°à";
	}
	document.getElementById("head").innerHTML = content;
	document.getElementById("check_answer").innerHTML = button_content;
	answer_hidden = !answer_hidden;
}

function clear() {
	for(let i=0; i<max_round_num; i++){
		for(let j=0; j<stroke_num; j++){
			document.getElementById("line"+(i+1)+"spot"+(j+1)).innerHTML = "";
			document.getElementById("line"+(i+1)+"spot"+(j+1)).style.background = "white";
		}
		document.getElementById("ans" + (i+1)).innerHTML = "";
	}
}

function clear_line() {
	if(!is_end){
		for(let i=0; i<stroke_num; i++){
			document.getElementById("line"+(round+1)+"spot"+(i+1)).innerHTML = "";
		}
		document.getElementById("ans" + (round + 1)).innerHTML = "";
		now_num = 0;
	}
}
