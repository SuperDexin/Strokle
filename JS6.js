const strokes = ["㇐", "㇑", "㇓", "㇔", "㇕", "㇅", "㇇", "㇗", "㇞", "㇛", "㇂", "㇎"];

const characters = [
	"丞", "丢", "乒", "乓", "乔", "乩", "买", "争", "亘", "亚", "交", "亥", "亦", "产", "仰", "仲", "仳", "仵", "件", "价", 
	"任", "份", "仿", "企", "伈", "伉", "伊", "伍", "伎", "伏", "伐", "休", "众", "优", "伙", "会", "伛", "伞", "伟", "传", 
	"伢", "伣", "伤", "伥", "伦", "伧", "伪", "伫", "似", "佤", "充", "兆", "先", "光", "全", "共", "关", "兴", "再", "军", 
	"农", "冰", "冱", "冲", "决", "凫", "凼", "刎", "刑", "划", "刖", "列", "刘", "则", "刚", "创", "劣", "动", "匈", "匠", 
	"匡", "华", "协", "危", "压", "厌", "厍", "厾", "吁", "吃", "各", "吆", "合", "吉", "吊", "同", "名", "后", "吏", "吐", 
	"向", "吒", "吓", "吕", "吖", "吗", "吸", "回", "囟", "因", "囡", "团", "在", "圩", "圪", "圫", "圬", "圭", "圮", "圯", 
	"地", "圲", "圳", "圹", "场", "圾", "壮", "夙", "多", "夷", "夸", "夹", "夺", "夼", "奸", "她", "好", "妁", "如", "妃", 
	"妄", "妆", "妇", "妈", "孖", "字", "存", "孙", "宅", "宇", "守", "安", "寺", "寻", "导", "尖", "尘", "尥", "尧", "尽", 
	"屹", "屺", "屼", "屾", "屿", "岁", "岂", "岌", "州", "巡", "巩", "帆", "师", "年", "并", "庄", "庆", "延", "廷", "异", 
	"式", "弛", "当", "忏", "忖", "忙", "戌", "戍", "戎", "戏", "成", "托", "扛", "扞", "扣", "扦", "执", "扩", "扪", "扫", 
	"扬", "收", "旨", "早", "旬", "旭", "旮", "旯", "曲", "曳", "有", "朱", "朳", "朴", "朵", "朸", "机", "朽", "杀", "杂", 
	"权", "次", "欢", "此", "死", "毕", "氖", "氘", "氽", "汆", "汊", "汋", "汐", "汔", "汕", "汗", "汛", "汜", "汝", "江", 
	"池", "污", "汤", "汲", "灯", "灰", "爷", "牝", "牟", "犴", "犷", "犸", "玎", "玐", "玑", "甪", "百", "癿", "祁", "竹", 
	"米", "纡", "红", "纣", "纤", "纥", "约", "级", "纨", "纩", "纪", "纫", "缶", "网", "羊", "羽", "老", "考", "而", "耒", 
	"耳", "聿", "肉", "肋", "肌", "臣", "自", "至", "臼", "舌", "舛", "舟", "艮", "色", "芃", "芄", "芊", "芋", "芍", "芎", 
	"芏", "芑", "芒", "芗", "芝", "芨", "虫", "血", "行", "衣", "西", "观", "讲", "讳", "讴", "讵", "讶", "讷", "许", "讹", 
	"论", "讻", "讼", "讽", "设", "访", "诀", "贞", "负", "轨", "达", "辿", "迁", "迂", "迄", "迅", "过", "迈", "邠", "邡", 
	"邢", "那", "邦", "邨", "邪", "邬", "钆", "钇", "闫", "闬", "闭", "问", "闯", "阪", "阮", "阱", "防", "阳", "阴", "阵", 
	"阶", "页", "驮", "驯", "驰", "齐" ]; 

const orders = [
	["7", "2", "7", "3", "4", "1"], ["3", "1", "2", "1", "8", "4"], ["3", "2", "1", "2", "1", "3"], ["3", "2", "1", "2", "1", "4"], 
	["3", "1", "3", "4", "3", "2"], ["2", "1", "2", "5", "1", "8"], ["7", "4", "4", "1", "3", "4"], ["3", "7", "5", "1", "1", "2"], 
	["1", "2", "5", "1", "1", "1"], ["1", "2", "2", "4", "3", "1"], ["4", "1", "3", "4", "3", "4"], ["4", "1", "8", "3", "3", "4"], 
	["4", "1", "3", "2", "3", "4"], ["4", "1", "4", "3", "1", "3"], ["3", "2", "3", "8", "5", "2"], ["3", "2", "2", "5", "1", "2"], 
	["3", "2", "1", "8", "3", "8"], ["3", "2", "3", "1", "1", "2"], ["3", "2", "3", "1", "1", "2"], ["3", "2", "3", "4", "3", "2"], 
	["3", "2", "3", "1", "2", "1"], ["3", "2", "3", "4", "5", "3"], ["3", "2", "4", "1", "5", "3"], ["3", "4", "2", "1", "2", "1"], 
	["3", "2", "4", "b", "4", "4"], ["3", "2", "4", "1", "3", "6"], ["3", "2", "5", "1", "1", "3"], ["3", "2", "1", "2", "5", "1"], 
	["3", "2", "1", "2", "7", "4"], ["3", "2", "1", "3", "4", "4"], ["3", "2", "1", "b", "3", "4"], ["3", "2", "1", "2", "3", "4"], 
	["3", "4", "3", "4", "3", "4"], ["3", "2", "1", "3", "8", "4"], ["3", "2", "4", "3", "3", "4"], ["3", "4", "1", "1", "8", "4"], 
	["3", "2", "1", "3", "4", "8"], ["3", "4", "4", "3", "1", "2"], ["3", "2", "1", "1", "5", "2"], ["3", "2", "1", "1", "9", "4"], 
	["3", "2", "1", "8", "2", "3"], ["3", "2", "2", "5", "3", "5"], ["3", "2", "3", "1", "5", "3"], ["3", "2", "3", "1", "8", "4"], 
	["3", "2", "3", "4", "3", "8"], ["3", "2", "3", "4", "5", "8"], ["3", "2", "4", "3", "5", "4"], ["3", "2", "4", "4", "7", "1"], 
	["3", "2", "8", "4", "3", "4"], ["3", "2", "1", "8", "6", "4"], ["4", "1", "8", "4", "3", "8"], ["3", "4", "1", "8", "3", "4"], 
	["3", "1", "2", "1", "3", "8"], ["2", "4", "3", "1", "3", "8"], ["3", "4", "1", "1", "2", "1"], ["1", "2", "2", "1", "3", "4"], 
	["4", "3", "1", "1", "3", "4"], ["4", "4", "3", "1", "3", "4"], ["1", "2", "5", "2", "1", "1"], ["4", "7", "1", "8", "1", "2"], 
	["4", "7", "3", "8", "3", "4"], ["4", "1", "2", "7", "3", "4"], ["4", "1", "1", "5", "8", "1"], ["4", "1", "2", "5", "1", "2"], 
	["4", "1", "5", "1", "3", "4"], ["3", "5", "4", "9", "3", "6"], ["2", "7", "3", "4", "8", "2"], ["3", "5", "3", "3", "2", "2"], 
	["1", "1", "3", "2", "2", "2"], ["1", "b", "3", "4", "2", "2"], ["3", "5", "1", "1", "2", "2"], ["1", "3", "7", "4", "2", "2"], 
	["4", "1", "3", "4", "2", "2"], ["2", "5", "3", "4", "2", "2"], ["2", "5", "3", "4", "2", "2"], ["3", "4", "5", "8", "2", "2"], 
	["2", "3", "4", "3", "5", "3"], ["1", "1", "8", "4", "5", "3"], ["3", "5", "3", "4", "8", "2"], ["1", "3", "3", "1", "2", "8"], 
	["1", "1", "1", "2", "1", "8"], ["3", "2", "3", "8", "1", "2"], ["1", "2", "5", "3", "4", "4"], ["3", "7", "1", "3", "5", "8"], 
	["1", "3", "1", "2", "1", "4"], ["1", "3", "1", "3", "4", "4"], ["1", "3", "1", "8", "1", "2"], ["6", "1", "2", "1", "8", "4"], 
	["2", "5", "1", "1", "1", "2"], ["2", "5", "1", "3", "1", "6"], ["3", "7", "4", "2", "5", "1"], ["2", "5", "1", "8", "8", "4"], 
	["3", "4", "1", "2", "5", "1"], ["1", "2", "1", "2", "5", "1"], ["2", "5", "1", "2", "5", "2"], ["2", "5", "1", "2", "5", "1"], 
	["3", "7", "4", "2", "5", "1"], ["3", "3", "1", "2", "5", "1"], ["1", "2", "5", "1", "3", "4"], ["2", "5", "1", "1", "2", "1"], 
	["3", "2", "5", "2", "5", "1"], ["2", "5", "1", "3", "1", "8"], ["2", "5", "1", "1", "2", "4"], ["2", "5", "1", "2", "5", "1"], 
	["2", "5", "1", "4", "3", "2"], ["2", "5", "1", "5", "9", "1"], ["2", "5", "1", "3", "c", "4"], ["2", "5", "2", "5", "1", "1"], 
	["3", "2", "5", "3", "4", "1"], ["2", "5", "1", "3", "4", "1"], ["2", "5", "a", "3", "1", "1"], ["2", "5", "1", "2", "3", "1"], 
	["1", "3", "2", "1", "2", "1"], ["1", "2", "1", "1", "1", "2"], ["1", "2", "1", "3", "1", "6"], ["1", "2", "1", "3", "1", "8"], 
	["1", "2", "1", "1", "1", "9"], ["1", "2", "1", "1", "2", "1"], ["1", "2", "1", "5", "1", "8"], ["1", "2", "1", "5", "1", "8"], 
	["1", "2", "1", "5", "2", "8"], ["1", "2", "1", "3", "1", "2"], ["1", "2", "1", "3", "2", "2"], ["1", "2", "1", "4", "1", "3"], 
	["1", "2", "1", "c", "3", "3"], ["1", "2", "1", "3", "c", "4"], ["4", "1", "2", "1", "2", "1"], ["3", "6", "1", "3", "7", "4"], 
	["3", "7", "4", "3", "7", "4"], ["1", "5", "1", "9", "3", "4"], ["1", "3", "4", "1", "1", "9"], ["1", "4", "3", "1", "3", "4"], 
	["1", "3", "4", "1", "2", "4"], ["1", "3", "4", "3", "2", "2"], ["a", "3", "1", "1", "1", "2"], ["a", "3", "1", "5", "2", "8"], 
	["a", "3", "1", "7", "2", "1"], ["a", "3", "1", "3", "5", "4"], ["a", "3", "1", "2", "5", "1"], ["a", "3", "1", "5", "1", "8"], 
	["4", "1", "8", "a", "3", "1"], ["4", "1", "2", "a", "3", "1"], ["a", "3", "1", "5", "1", "1"], ["a", "3", "1", "5", "9", "1"], 
	["7", "2", "1", "7", "2", "1"], ["4", "4", "7", "7", "2", "1"], ["1", "3", "2", "7", "2", "1"], ["7", "2", "1", "2", "3", "4"], 
	["4", "4", "7", "3", "1", "8"], ["4", "4", "7", "1", "1", "2"], ["4", "4", "7", "1", "2", "4"], ["4", "4", "7", "a", "3", "1"], 
	["1", "2", "1", "1", "2", "4"], ["5", "1", "1", "1", "2", "4"], ["5", "1", "8", "1", "2", "4"], ["2", "3", "4", "1", "3", "4"], 
	["2", "3", "4", "1", "2", "1"], ["1", "3", "8", "3", "5", "4"], ["1", "b", "3", "1", "3", "8"], ["5", "1", "3", "4", "4", "4"], 
	["2", "8", "2", "3", "1", "6"], ["2", "8", "2", "5", "1", "8"], ["2", "8", "2", "1", "3", "8"], ["2", "8", "2", "2", "8", "2"], 
	["2", "8", "2", "1", "9", "1"], ["2", "8", "2", "3", "7", "4"], ["2", "8", "2", "5", "1", "8"], ["2", "8", "2", "3", "c", "4"], 
	["4", "3", "4", "2", "4", "2"], ["a", "a", "a", "4", "c", "4"], ["1", "2", "1", "3", "6", "4"], ["2", "5", "2", "3", "6", "4"], 
	["2", "3", "1", "2", "5", "2"], ["3", "1", "1", "2", "1", "2"], ["4", "3", "1", "1", "3", "2"], ["4", "1", "3", "1", "2", "1"], 
	["4", "1", "3", "1", "3", "4"], ["3", "2", "1", "8", "c", "4"], ["3", "1", "2", "1", "c", "4"], ["5", "1", "8", "1", "3", "2"], 
	["1", "1", "2", "1", "b", "4"], ["5", "1", "9", "5", "2", "8"], ["2", "4", "3", "5", "1", "1"], ["4", "4", "2", "3", "1", "2"], 
	["4", "4", "2", "1", "2", "4"], ["4", "4", "2", "4", "1", "8"], ["1", "3", "1", "b", "3", "4"], ["1", "3", "4", "b", "3", "4"], 
	["1", "1", "3", "b", "3", "4"], ["7", "4", "1", "b", "3", "4"], ["1", "3", "5", "b", "3", "4"], ["1", "2", "1", "3", "1", "8"], 
	["1", "2", "1", "1", "2", "1"], ["1", "2", "1", "1", "1", "2"], ["1", "2", "1", "2", "5", "1"], ["1", "2", "1", "3", "1", "2"], 
	["1", "2", "1", "3", "6", "4"], ["1", "2", "1", "4", "1", "3"], ["1", "2", "1", "4", "2", "5"], ["1", "2", "1", "5", "1", "1"], 
	["1", "2", "1", "c", "3", "3"], ["8", "2", "3", "1", "3", "4"], ["3", "8", "2", "5", "1", "1"], ["2", "5", "1", "1", "1", "2"], 
	["3", "5", "2", "5", "1", "1"], ["3", "6", "2", "5", "1", "1"], ["3", "6", "2", "5", "1", "1"], ["2", "5", "1", "1", "3", "6"], 
	["2", "5", "1", "2", "2", "1"], ["2", "5", "1", "1", "b", "3"], ["1", "3", "2", "5", "1", "1"], ["3", "1", "1", "2", "3", "4"], 
	["1", "2", "3", "4", "3", "4"], ["1", "2", "3", "4", "2", "4"], ["3", "6", "1", "2", "3", "4"], ["1", "2", "3", "4", "5", "3"], 
	["1", "2", "3", "4", "3", "6"], ["1", "2", "3", "4", "1", "9"], ["3", "4", "1", "2", "3", "4"], ["3", "6", "1", "2", "3", "4"], 
	["1", "2", "3", "4", "7", "4"], ["4", "1", "3", "7", "3", "4"], ["7", "4", "3", "7", "3", "4"], ["2", "1", "2", "1", "3", "8"], 
	["1", "3", "7", "4", "3", "8"], ["1", "8", "3", "8", "1", "2"], ["3", "1", "1", "6", "c", "3"], ["3", "1", "1", "6", "3", "2"], 
	["3", "4", "2", "7", "3", "4"], ["3", "4", "2", "7", "3", "4"], ["4", "4", "1", "7", "4", "4"], ["4", "4", "1", "3", "5", "4"], 
	["4", "4", "1", "3", "7", "4"], ["4", "4", "1", "3", "1", "6"], ["4", "4", "1", "2", "8", "2"], ["4", "4", "1", "1", "1", "2"], 
	["4", "4", "1", "6", "1", "2"], ["4", "4", "1", "5", "1", "8"], ["4", "4", "1", "a", "3", "1"], ["4", "4", "1", "1", "2", "1"], 
	["4", "4", "1", "5", "2", "8"], ["4", "4", "1", "1", "1", "9"], ["4", "4", "1", "c", "3", "3"], ["4", "4", "1", "3", "c", "4"], 
	["4", "3", "3", "4", "1", "2"], ["1", "3", "4", "3", "3", "4"], ["3", "4", "3", "4", "5", "2"], ["3", "1", "2", "1", "3", "8"], 
	["8", "4", "3", "1", "1", "2"], ["3", "2", "3", "1", "1", "2"], ["3", "2", "3", "4", "1", "3"], ["3", "2", "3", "5", "9", "1"], 
	["1", "1", "2", "1", "1", "2"], ["1", "1", "2", "1", "3", "4"], ["1", "1", "2", "1", "3", "6"], ["3", "3", "5", "1", "1", "2"], 
	["1", "3", "2", "5", "1", "1"], ["3", "2", "5", "1", "1", "8"], ["4", "5", "2", "4", "5", "2"], ["3", "1", "2", "3", "1", "2"], 
	["4", "3", "1", "2", "3", "4"], ["8", "8", "1", "1", "1", "2"], ["8", "8", "1", "1", "2", "1"], ["8", "8", "1", "1", "2", "4"], 
	["8", "8", "1", "3", "1", "2"], ["8", "8", "1", "3", "1", "6"], ["8", "8", "1", "3", "5", "4"], ["8", "8", "1", "3", "c", "4"], 
	["8", "8", "1", "3", "6", "4"], ["8", "8", "1", "4", "1", "3"], ["8", "8", "1", "5", "1", "8"], ["8", "8", "1", "5", "3", "4"], 
	["3", "1", "1", "2", "8", "2"], ["2", "5", "3", "4", "3", "4"], ["4", "3", "1", "1", "1", "2"], ["5", "4", "1", "5", "4", "1"], 
	["1", "2", "1", "3", "3", "8"], ["1", "2", "1", "3", "1", "9"], ["1", "3", "2", "5", "2", "2"], ["1", "1", "1", "2", "3", "4"], 
	["1", "2", "2", "1", "1", "1"], ["5", "1", "1", "1", "1", "2"], ["2", "5", "3", "4", "3", "4"], ["3", "5", "1", "1", "5", "3"], 
	["3", "5", "1", "1", "3", "6"], ["1", "2", "5", "1", "2", "8"], ["3", "2", "5", "1", "1", "1"], ["1", "8", "4", "1", "2", "1"], 
	["3", "2", "1", "5", "1", "1"], ["3", "1", "2", "2", "5", "1"], ["3", "7", "4", "1", "8", "2"], ["3", "3", "5", "4", "1", "4"], 
	["5", "1", "1", "5", "3", "4"], ["3", "7", "5", "2", "1", "5"], ["1", "2", "2", "3", "6", "4"], ["1", "2", "2", "3", "6", "4"], 
	["1", "2", "2", "3", "1", "2"], ["1", "2", "2", "1", "1", "2"], ["1", "2", "2", "3", "5", "4"], ["1", "2", "2", "5", "1", "9"], 
	["1", "2", "2", "1", "2", "1"], ["1", "2", "2", "5", "1", "8"], ["1", "2", "2", "4", "1", "8"], ["1", "2", "2", "8", "8", "3"], 
	["1", "2", "2", "4", "7", "4"], ["1", "2", "2", "3", "c", "4"], ["2", "5", "1", "2", "1", "4"], ["3", "2", "5", "2", "2", "1"], 
	["3", "3", "2", "1", "1", "2"], ["4", "1", "3", "8", "3", "4"], ["1", "2", "5", "3", "8", "1"], ["7", "4", "2", "5", "3", "8"], 
	["4", "6", "1", "1", "3", "2"], ["4", "6", "1", "1", "5", "2"], ["4", "6", "1", "3", "4", "8"], ["4", "6", "1", "5", "1", "8"], 
	["4", "6", "1", "8", "2", "3"], ["4", "6", "2", "5", "3", "4"], ["4", "6", "3", "1", "1", "2"], ["4", "6", "3", "2", "3", "8"], 
	["4", "6", "3", "4", "3", "6"], ["4", "6", "3", "4", "8", "2"], ["4", "6", "3", "4", "8", "4"], ["4", "6", "3", "6", "3", "4"], 
	["4", "6", "3", "6", "7", "4"], ["4", "6", "4", "1", "5", "3"], ["4", "6", "5", "1", "3", "4"], ["2", "1", "2", "5", "3", "4"], 
	["3", "7", "2", "5", "3", "4"], ["1", "8", "2", "1", "3", "6"], ["1", "3", "4", "4", "c", "4"], ["2", "8", "2", "4", "c", "4"], 
	["3", "1", "2", "4", "c", "4"], ["1", "1", "2", "4", "c", "4"], ["3", "1", "6", "4", "c", "4"], ["6", "1", "2", "4", "c", "4"], 
	["1", "2", "4", "4", "c", "4"], ["1", "5", "3", "4", "c", "4"], ["3", "4", "5", "3", "c", "2"], ["4", "1", "5", "3", "c", "2"], 
	["1", "1", "3", "2", "c", "2"], ["5", "1", "1", "3", "c", "2"], ["1", "1", "1", "3", "c", "2"], ["1", "8", "2", "8", "c", "2"], 
	["1", "8", "2", "3", "c", "2"], ["3", "5", "9", "1", "c", "2"], ["3", "1", "1", "1", "8", "8"], ["3", "1", "1", "1", "8", "6"], 
	["4", "2", "5", "1", "1", "1"], ["4", "2", "5", "1", "1", "2"], ["4", "2", "5", "1", "2", "3"], ["4", "2", "5", "2", "5", "1"], 
	["4", "2", "5", "5", "9", "1"], ["c", "2", "3", "3", "7", "4"], ["c", "2", "1", "1", "3", "8"], ["c", "2", "1", "1", "3", "2"], 
	["c", "2", "4", "1", "5", "3"], ["c", "2", "2", "5", "1", "1"], ["c", "2", "3", "5", "1", "1"], ["c", "2", "1", "8", "1", "2"], 
	["c", "2", "3", "4", "3", "2"], ["1", "3", "2", "5", "3", "4"], ["5", "9", "1", "1", "3", "4"], ["5", "9", "1", "3", "2", "2"], 
	["5", "9", "1", "5", "2", "8"], ["4", "1", "3", "4", "3", "2"]];


const total_char = 366;
const stroke_num = 6;
const max_round_num = 10;
const result_icon = ["⬜", "🟩", "🟨"];

let now_num = 0;
let round = 0;
let answer_hidden = true;

let answers = new Array(stroke_num);
let question = new Array(stroke_num);
let question_char = "";
let all_result = [];

let is_end = false;

function choose(ID) {
	if (now_num < stroke_num && !is_end) {
		answers[now_num] = ID;
		now_num += 1;
		let spot_id = "line" + (round + 1) + "spot" + now_num;
		document.getElementById(spot_id).innerHTML = strokes[parseInt(ID, 16) - 1];
	}
}

function del() {
	if (now_num > 0 && !is_end) {
		let spot_id = "line" + (round + 1) + "spot" + now_num;
		document.getElementById(spot_id).innerHTML = "";
		now_num -= 1;
		document.getElementById("ans" + (round + 1)).innerHTML = "";	
	}
}

function submit() {
	if (now_num === stroke_num) {
		if(check_char_legal()){
			if(stroke_num == show()){
				success();
			}else if(round == max_round_num){
				fail();
			}
		}
		else{
			document.getElementById("ans" + (round + 1)).innerHTML = "查无此字";
		}
	}
}

function check_char_legal(){
	let content = "";
	let is_legal = false;

	for(let i = 0; i < total_char; i++){
		for(let j = 0; j < stroke_num; j++){
			if(answers[j] != orders[i][j]){
				break;
			}
			else if(j == stroke_num-1){
				content += characters[i];
				content += " ";
				is_legal = true;
			}
		}
	}
	document.getElementById("ans" + (round + 1)).innerHTML = content;
	return is_legal;
}

function show(){
	round++;
	let match_result = match();
	let temp = 0;
	for(let i = 0; i < stroke_num; i++){
		if(match_result[i] == 0){
			document.getElementById("line"+round+"spot"+(i+1)).style.background = 'lightgray';
		}
		else if(match_result[i] == 1){
			document.getElementById("line"+round+"spot"+(i+1)).style.background = 'lightgreen';
			temp++;
		}
		else if(match_result[i] == 2){
			document.getElementById("line"+round+"spot"+(i+1)).style.background = 'lightyellow';
		}
		all_result.push(match_result[i]);
	}
	now_num = 0;
	return temp;
}

function match(){
	let match_result = [0,0,0,0,0,0];
	let temp_array = [0,0,0,0,0,0];
	for(let i = 0; i < stroke_num; i++){
		if(answers[i] == question[i]){
			match_result[i] = 1;
		}
		else{
			temp_array[i] = question[i];
		}
	}
	for(let i = 0; i < stroke_num; i++){
		if(match_result[i] != 1){
			for(let j = 0; j < stroke_num; j++){
				if(answers[i] == temp_array[j]){
					match_result[i] = 2;
					temp_array[j] = 0;
					break;
				}
			}
		}
	}
	return match_result;
}

function success(){
	let content = `恭喜成功！\n————————————————\n正确答案：「${question_char}」\n`;
	let temp = 0;
	for(let i = 0; i < round; i++){
		for(let j = 0; j < stroke_num; j++){
			content += result_icon[all_result[temp]];
			temp++;
		}
		content += "\n";	
	}
	round = 0;
	is_end = true;
	alert(content);
}

function fail(){
	let content = `抱歉你并未完成\n————————————————\n正确答案：「${question_char}」\n`;
	let temp = 0;
	for(let i = 0; i < round; i++){
		for(let j = 0; j < stroke_num; j++){
			content += result_icon[all_result[temp]];
			temp++;
		}
		content += "\n";	
	}
	round = 0;
	is_end = true;
	alert(content);
}

function refresh(){
	let temp = Math.floor((Math.random() * total_char));

	for(let i=0; i<stroke_num; i++){
		question[i] = orders[temp][i];
	}
	question_char = characters[temp];

	round = 0;
	now_num = 0;
	is_end = false;
	all_result = [];
	document.getElementById("head").innerHTML = "STROKLE<span style=\"font-size:3rem\">6</span>";
	document.getElementById("check_answer").innerHTML = "查看答案";
	clear();
}

function show_answer() {
	let content = "";
	let button_content;
	if (!answer_hidden) {
		content = "<span style=\"font-size:3rem\">6</span>";
		button_content = "查看答案";
	}
	if (answer_hidden) {
		content = question_char;
		button_content = "隐藏答案";
	}
	document.getElementById("head").innerHTML = content;
	document.getElementById("check_answer").innerHTML = button_content;
	answer_hidden = !answer_hidden;
}

function clear() {
	for(let i=0; i<max_round_num; i++){
		for(let j=0; j<stroke_num; j++){
			document.getElementById("line"+(i+1)+"spot"+(j+1)).innerHTML = "";
			document.getElementById("line"+(i+1)+"spot"+(j+1)).style.background = "white";
		}
		document.getElementById("ans" + (i+1)).innerHTML = "";
	}
}

function clear_line() {
	if(!is_end){
		for(let i=0; i<stroke_num; i++){
			document.getElementById("line"+(round+1)+"spot"+(i+1)).innerHTML = "";
		}
		document.getElementById("ans" + (round + 1)).innerHTML = "";
		now_num = 0;
	}
}

function first_start (){
	refresh();
}